# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-20 20:14
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import diya_dnipro.accounts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='Ім’я')),
                ('email', models.EmailField(error_messages={'unique': 'Така адреса електронної пошти вже існує'}, max_length=254, unique=True, verbose_name='адреса електронної пошти')),
                ('is_staff', models.BooleanField(default=False, help_text='Визначає, що цей користувач має доступ до панелі адміністрування.', verbose_name='Статус адміна')),
                ('is_active', models.BooleanField(default=True, help_text='Визначає, що цей користувач не є заблокованим.', verbose_name='Активний')),
                ('is_beta', models.BooleanField(default=False, help_text='Визначає, що цей користувач має доступ до тествого функционалу.', verbose_name='Статус вибробувальника')),
                ('date_joined', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата першої появи')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'запис користувача',
                'swappable': 'AUTH_USER_MODEL',
                'verbose_name_plural': 'Користувачі',
            },
            managers=[
                ('objects', diya_dnipro.accounts.models.UserManager()),
            ],
        ),
    ]
